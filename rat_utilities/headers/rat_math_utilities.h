// ----------------------------------------------------------------------------------------------------
// Except when otherwise noted, this file is licensed under
// Creative Commons Attributions ShakeAlike 4.0 License (CC-BY-SA 4.0)
//
// https://creativecommons.org/licenses/by-sa/4.0/legalcode
//
// Copyright (c) 2020 - 2024 Rapiot Open Hardware Project
// ----------------------------------------------------------------------------------------------------

// ----------------------------------------------------------------------------------------------------
// Math Utilities Header File
// ----------------------------------------------------------------------------------------------------

// ----------------------------------------------------------------------------------------------------
// Includes
// ----------------------------------------------------------------------------------------------------
#include <stdlib.h>
#include <stdint.h>
#include <stdbool.h>

// ----------------------------------------------------------------------------------------------------
// Functions
// ----------------------------------------------------------------------------------------------------

// ----------------------------------------------------------------------------------------------------
// Hex to char
// ----------------------------------------------------------------------------------------------------
char rat_hex_to_char (uint8_t value);

// ----------------------------------------------------------------------------------------------------
// Char to hex
// ----------------------------------------------------------------------------------------------------
uint8_t rat_char_to_hex (char value);

// ----------------------------------------------------------------------------------------------------
// Hex array to char array
// ----------------------------------------------------------------------------------------------------
void rat_hex_array_to_char_array (uint8_t * hex_array,
                                  uint8_t   hex_array_length,
                                  char    * char_array,
                                  uint8_t   char_array_index);

// ----------------------------------------------------------------------------------------------------
// Char array to hex array
// ----------------------------------------------------------------------------------------------------
void rat_char_array_to_hex_array (char    * char_array,
                                  uint8_t   char_array_index,
                                  uint8_t   char_array_length,
                                  uint8_t * hex_array);

// ----------------------------------------------------------------------------------------------------
// Clear a string
// ----------------------------------------------------------------------------------------------------
void rat_clear_string (char     * char_array,
                       uint16_t   length);

// ----------------------------------------------------------------------------------------------------
// Two's complement
// ----------------------------------------------------------------------------------------------------

// ----------------------------------------------------------------------------------------------------
// Two's complement, 8, 16, and 32 bit unsigned integers
// ----------------------------------------------------------------------------------------------------
uint8_t  rat_twos_complement_short (uint8_t value);
uint16_t rat_twos_complement (uint16_t value);
uint32_t rat_twos_complement_long (uint32_t value);

// ----------------------------------------------------------------------------------------------------
// Convert a float to a two's complement (8, 16, and 32 bit unsigned integers)
// ----------------------------------------------------------------------------------------------------
uint8_t  rat_convert_twos_complement_short (float   value,
                                            uint8_t decimals);
uint16_t rat_convert_twos_complement       (float   value,
                                            uint8_t decimals);
uint32_t rat_convert_twos_complement_long  (float   value,
                                            uint8_t decimals);

// ----------------------------------------------------------------------------------------------------
// Generic CRC algorithm
// ----------------------------------------------------------------------------------------------------
uint8_t rat_calculate_crc (uint16_t value,
                           uint8_t  initialisation,
                           uint8_t  polynomial);

// ----------------------------------------------------------------------------------------------------
// String compare functions
// ----------------------------------------------------------------------------------------------------
bool rat_string_compare (char * a,
                         char * b);

bool rat_string_compare_reverse (char * a,
                                 char * b);

// ----------------------------------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------------------------------
bool rat_string_find_char (char    * a,
                           char      b,
                           uint8_t * location);

// ----------------------------------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------------------------------
bool rat_string_find (char * a,
                      char * b);

// ----------------------------------------------------------------------------------------------------
//
// ----------------------------------------------------------------------------------------------------
void rat_string_sub (char * a,
                     char * b,
                     uint8_t index,
                     uint8_t length);

// ----------------------------------------------------------------------------------------------------
// Wait interrupts
// ----------------------------------------------------------------------------------------------------
void rat_wait_interrupt (void);

void rat_wait_interrupts (uint8_t interrupts);

// ----------------------------------------------------------------------------------------------------
// Init the interrupt counter
// ----------------------------------------------------------------------------------------------------
void rat_init_interrupt_counter (void);

// ----------------------------------------------------------------------------------------------------
// Get the interrupt counter
// ----------------------------------------------------------------------------------------------------
uint32_t rat_interrupt_counter (void);